version: "3"
services:
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    dns:
      - 1.1.1.1
      - 1.0.0.1
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/prowlarr:/config
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.rule: Host(`indexers.local.$DOMAIN`)
      traefik.http.routers.prowlarr.entrypoints: websecure
      traefik.http.routers.prowlarr.tls: true
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      traefik.http.routers.prowlarr.middlewares: authentik@docker
      traefik.http.routers.prowlarr-auth.rule: Host(`indexers.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.prowlarr-auth.entrypoints: websecure
      traefik.http.routers.prowlarr-auth.service: authentik

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/radarr:/config
      - ${MEDIA_ROOT}:/data
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.rule: Host(`movies.local.$DOMAIN`)
      traefik.http.routers.radarr.entrypoints: websecure
      traefik.http.routers.radarr.tls: true
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.middlewares: authentik@docker
      traefik.http.routers.radarr-auth.rule: Host(`movies.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.radarr-auth.entrypoints: websecure
      traefik.http.routers.radarr-auth.service: authentik

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/sonarr:/config
      - ${MEDIA_ROOT}:/data
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.rule: Host(`tv.local.$DOMAIN`)
      traefik.http.routers.sonarr.entrypoints: websecure
      traefik.http.routers.sonarr.tls: true
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.middlewares: authentik@docker
      traefik.http.routers.sonarr-auth.rule: Host(`tv.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.sonarr-auth.entrypoints: websecure
      traefik.http.routers.sonarr-auth.service: authentik

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/bazarr:/config
      - ${MEDIA_ROOT}:/data
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.bazarr.rule: Host(`subtitles.local.$DOMAIN`)
      traefik.http.routers.bazarr.entrypoints: websecure
      traefik.http.routers.bazarr.tls: true
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.routers.bazarr.middlewares: authentik@docker
      traefik.http.routers.bazarr-auth.rule: Host(`subtitles.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.bazarr-auth.entrypoints: websecure
      traefik.http.routers.bazarr-auth.service: authentik

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/sabnzbd:/config
      - ${MEDIA_ROOT}/usenet:/data/usenet
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.sabnzbd.rule: Host(`usenet.local.$DOMAIN`)
      traefik.http.routers.sabnzbd.entrypoints: websecure
      traefik.http.routers.sabnzbd.tls: true
      traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
      traefik.http.routers.sabnzbd.middlewares: authentik@docker
      traefik.http.routers.sabnzbd-auth.rule: Host(`usenet.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.sabnzbd-auth.entrypoints: websecure
      traefik.http.routers.sabnzbd-auth.service: authentik

  sabnzbd_exporter:
    container_name: sabnzbd_exporter
    image: msroest/sabnzbd_exporter
    restart: unless-stopped
    networks:
      - default
      - monitoring
    environment:
      SABNZBD_BASEURL: http://sabnzbd:8080
      SABNZBD_APIKEY: ${SABNZBD_API_KEY}

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8081
      - TORRENTING_PORT=6881
    volumes:
      - ./data/qbittorrent:/config
      - ${MEDIA_ROOT}/torrents:/data/torrents
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.qbittorrent.rule: Host(`torrent.local.$DOMAIN`)
      traefik.http.routers.qbittorrent.entrypoints: websecure
      traefik.http.routers.qbittorrent.tls: true
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8081
      traefik.http.routers.qbittorrent.middlewares: authentik@docker
      traefik.http.routers.qbittorrent-auth.rule: Host(`torrent.local.$DOMAIN`) && PathPrefix(`/outpost.goauthentik.io/`)
      traefik.http.routers.qbittorrent-auth.entrypoints: websecure
      traefik.http.routers.qbittorrent-auth.service: authentik

  qbittorrent_exporter:
    container_name: qbittorrent_exporter
    image: ghcr.io/esanchezm/prometheus-qbittorrent-exporter
    restart: unless-stopped
    networks:
      - default
      - monitoring
    environment:
      QBITTORRENT_PORT: 8081
      QBITTORRENT_HOST: qbittorrent

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/overseerr:/config
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.nginx.rule: Host(`overseerr.$DOMAIN`)
      traefik.http.routers.nginx.entrypoints: websecure
      traefik.http.services.nginx.loadbalancer.server.port: 5055

  tautulli:
    container_name: tautulli
    image: lscr.io/linuxserver/tautulli:latest
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ./data/tautulli:/config
    networks:
      - default
      - proxy
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.tautulli.rule: Host(`plexstats.local.$DOMAIN`)
      traefik.http.routers.tautulli.entrypoints: websecure
      traefik.http.routers.tautulli.tls: true
      traefik.http.services.tautulli.loadbalancer.server.port: 8181

networks:
  proxy:
    external: true
  monitoring:
    external: true
